// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// CategoryColumns holds the columns for the "category" table.
	CategoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true},
	}
	// CategoryTable holds the schema information for the "category" table.
	CategoryTable = &schema.Table{
		Name:       "category",
		Columns:    CategoryColumns,
		PrimaryKey: []*schema.Column{CategoryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "category_category_children",
				Columns: []*schema.Column{CategoryColumns[4]},

				RefColumns: []*schema.Column{CategoryColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DeliveryColumns holds the columns for the "delivery" table.
	DeliveryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "city", Type: field.TypeString, Nullable: true},
		{Name: "street", Type: field.TypeString, Nullable: true},
		{Name: "zipcode", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"READY", "COMP"}},
	}
	// DeliveryTable holds the schema information for the "delivery" table.
	DeliveryTable = &schema.Table{
		Name:        "delivery",
		Columns:     DeliveryColumns,
		PrimaryKey:  []*schema.Column{DeliveryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ItemColumns holds the columns for the "item" table.
	ItemColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "price", Type: field.TypeInt32},
		{Name: "stock_quantity", Type: field.TypeInt32},
		{Name: "dtype", Type: field.TypeEnum, Enums: []string{"ALBUM", "BOOK", "MOVIE"}},
		{Name: "author", Type: field.TypeString},
		{Name: "isbn", Type: field.TypeString},
	}
	// ItemTable holds the schema information for the "item" table.
	ItemTable = &schema.Table{
		Name:        "item",
		Columns:     ItemColumns,
		PrimaryKey:  []*schema.Column{ItemColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MemberColumns holds the columns for the "member" table.
	MemberColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "city", Type: field.TypeString, Nullable: true},
		{Name: "street", Type: field.TypeString, Nullable: true},
		{Name: "zipcode", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
	}
	// MemberTable holds the schema information for the "member" table.
	MemberTable = &schema.Table{
		Name:        "member",
		Columns:     MemberColumns,
		PrimaryKey:  []*schema.Column{MemberColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "order_date", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"ORDER", "CANCEL"}},
		{Name: "delivery_id", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "member_id", Type: field.TypeInt, Nullable: true},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "orders_delivery_order",
				Columns: []*schema.Column{OrdersColumns[5]},

				RefColumns: []*schema.Column{DeliveryColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "orders_member_orders",
				Columns: []*schema.Column{OrdersColumns[6]},

				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderItemsColumns holds the columns for the "order_items" table.
	OrderItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "order_price", Type: field.TypeInt32},
		{Name: "count", Type: field.TypeInt32},
		{Name: "order_id", Type: field.TypeInt, Nullable: true},
	}
	// OrderItemsTable holds the schema information for the "order_items" table.
	OrderItemsTable = &schema.Table{
		Name:       "order_items",
		Columns:    OrderItemsColumns,
		PrimaryKey: []*schema.Column{OrderItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "order_items_orders_orderItems",
				Columns: []*schema.Column{OrderItemsColumns[5]},

				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CategoryItemColumns holds the columns for the "category_item" table.
	CategoryItemColumns = []*schema.Column{
		{Name: "category_id", Type: field.TypeInt},
		{Name: "item_id", Type: field.TypeInt},
	}
	// CategoryItemTable holds the schema information for the "category_item" table.
	CategoryItemTable = &schema.Table{
		Name:       "category_item",
		Columns:    CategoryItemColumns,
		PrimaryKey: []*schema.Column{CategoryItemColumns[0], CategoryItemColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "category_item_category_id",
				Columns: []*schema.Column{CategoryItemColumns[0]},

				RefColumns: []*schema.Column{CategoryColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "category_item_item_id",
				Columns: []*schema.Column{CategoryItemColumns[1]},

				RefColumns: []*schema.Column{ItemColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CategoryTable,
		DeliveryTable,
		ItemTable,
		MemberTable,
		OrdersTable,
		OrderItemsTable,
		CategoryItemTable,
	}
)

func init() {
	CategoryTable.ForeignKeys[0].RefTable = CategoryTable
	OrdersTable.ForeignKeys[0].RefTable = DeliveryTable
	OrdersTable.ForeignKeys[1].RefTable = MemberTable
	OrderItemsTable.ForeignKeys[0].RefTable = OrdersTable
	CategoryItemTable.ForeignKeys[0].RefTable = CategoryTable
	CategoryItemTable.ForeignKeys[1].RefTable = ItemTable
}
