// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/TylerGrey/ent-shop/db/ent/category"
	"github.com/TylerGrey/ent-shop/db/ent/delivery"
	"github.com/TylerGrey/ent-shop/db/ent/item"
	"github.com/TylerGrey/ent-shop/db/ent/member"
	"github.com/TylerGrey/ent-shop/db/ent/order"
	"github.com/TylerGrey/ent-shop/db/ent/orderitem"
	"github.com/TylerGrey/ent-shop/db/ent/schema"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	categoryMixin := schema.Category{}.Mixin()
	categoryMixinFields0 := categoryMixin[0].Fields()
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescCreatedAt is the schema descriptor for created_at field.
	categoryDescCreatedAt := categoryMixinFields0[0].Descriptor()
	// category.DefaultCreatedAt holds the default value on creation for the created_at field.
	category.DefaultCreatedAt = categoryDescCreatedAt.Default.(func() time.Time)
	// categoryDescUpdatedAt is the schema descriptor for updated_at field.
	categoryDescUpdatedAt := categoryMixinFields0[1].Descriptor()
	// category.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	category.DefaultUpdatedAt = categoryDescUpdatedAt.Default.(func() time.Time)
	// category.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	category.UpdateDefaultUpdatedAt = categoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	deliveryMixin := schema.Delivery{}.Mixin()
	deliveryMixinFields1 := deliveryMixin[1].Fields()
	deliveryFields := schema.Delivery{}.Fields()
	_ = deliveryFields
	// deliveryDescCreatedAt is the schema descriptor for created_at field.
	deliveryDescCreatedAt := deliveryMixinFields1[0].Descriptor()
	// delivery.DefaultCreatedAt holds the default value on creation for the created_at field.
	delivery.DefaultCreatedAt = deliveryDescCreatedAt.Default.(func() time.Time)
	// deliveryDescUpdatedAt is the schema descriptor for updated_at field.
	deliveryDescUpdatedAt := deliveryMixinFields1[1].Descriptor()
	// delivery.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	delivery.DefaultUpdatedAt = deliveryDescUpdatedAt.Default.(func() time.Time)
	// delivery.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	delivery.UpdateDefaultUpdatedAt = deliveryDescUpdatedAt.UpdateDefault.(func() time.Time)
	itemMixin := schema.Item{}.Mixin()
	itemMixinFields0 := itemMixin[0].Fields()
	itemFields := schema.Item{}.Fields()
	_ = itemFields
	// itemDescCreatedAt is the schema descriptor for created_at field.
	itemDescCreatedAt := itemMixinFields0[0].Descriptor()
	// item.DefaultCreatedAt holds the default value on creation for the created_at field.
	item.DefaultCreatedAt = itemDescCreatedAt.Default.(func() time.Time)
	// itemDescUpdatedAt is the schema descriptor for updated_at field.
	itemDescUpdatedAt := itemMixinFields0[1].Descriptor()
	// item.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	item.DefaultUpdatedAt = itemDescUpdatedAt.Default.(func() time.Time)
	// item.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	item.UpdateDefaultUpdatedAt = itemDescUpdatedAt.UpdateDefault.(func() time.Time)
	memberMixin := schema.Member{}.Mixin()
	memberMixinFields1 := memberMixin[1].Fields()
	memberFields := schema.Member{}.Fields()
	_ = memberFields
	// memberDescCreatedAt is the schema descriptor for created_at field.
	memberDescCreatedAt := memberMixinFields1[0].Descriptor()
	// member.DefaultCreatedAt holds the default value on creation for the created_at field.
	member.DefaultCreatedAt = memberDescCreatedAt.Default.(func() time.Time)
	// memberDescUpdatedAt is the schema descriptor for updated_at field.
	memberDescUpdatedAt := memberMixinFields1[1].Descriptor()
	// member.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	member.DefaultUpdatedAt = memberDescUpdatedAt.Default.(func() time.Time)
	// member.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	member.UpdateDefaultUpdatedAt = memberDescUpdatedAt.UpdateDefault.(func() time.Time)
	orderMixin := schema.Order{}.Mixin()
	orderMixinFields0 := orderMixin[0].Fields()
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescCreatedAt is the schema descriptor for created_at field.
	orderDescCreatedAt := orderMixinFields0[0].Descriptor()
	// order.DefaultCreatedAt holds the default value on creation for the created_at field.
	order.DefaultCreatedAt = orderDescCreatedAt.Default.(func() time.Time)
	// orderDescUpdatedAt is the schema descriptor for updated_at field.
	orderDescUpdatedAt := orderMixinFields0[1].Descriptor()
	// order.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	order.DefaultUpdatedAt = orderDescUpdatedAt.Default.(func() time.Time)
	// order.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	order.UpdateDefaultUpdatedAt = orderDescUpdatedAt.UpdateDefault.(func() time.Time)
	orderitemMixin := schema.OrderItem{}.Mixin()
	orderitemMixinFields0 := orderitemMixin[0].Fields()
	orderitemFields := schema.OrderItem{}.Fields()
	_ = orderitemFields
	// orderitemDescCreatedAt is the schema descriptor for created_at field.
	orderitemDescCreatedAt := orderitemMixinFields0[0].Descriptor()
	// orderitem.DefaultCreatedAt holds the default value on creation for the created_at field.
	orderitem.DefaultCreatedAt = orderitemDescCreatedAt.Default.(func() time.Time)
	// orderitemDescUpdatedAt is the schema descriptor for updated_at field.
	orderitemDescUpdatedAt := orderitemMixinFields0[1].Descriptor()
	// orderitem.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orderitem.DefaultUpdatedAt = orderitemDescUpdatedAt.Default.(func() time.Time)
	// orderitem.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orderitem.UpdateDefaultUpdatedAt = orderitemDescUpdatedAt.UpdateDefault.(func() time.Time)
}
