// Code generated by entc, DO NOT EDIT.

package item

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the item type in the database.
	Label = "item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldStockQuantity holds the string denoting the stockquantity field in the database.
	FieldStockQuantity = "stock_quantity"
	// FieldDtype holds the string denoting the dtype field in the database.
	FieldDtype = "dtype"

	// EdgeCategories holds the string denoting the categories edge name in mutations.
	EdgeCategories = "categories"

	// Table holds the table name of the item in the database.
	Table = "item"
	// CategoriesTable is the table the holds the categories relation/edge. The primary key declared below.
	CategoriesTable = "category_item"
	// CategoriesInverseTable is the table name for the Category entity.
	// It exists in this package in order to avoid circular dependency with the "category" package.
	CategoriesInverseTable = "category"
)

// Columns holds all SQL columns for item fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldName,
	FieldPrice,
	FieldStockQuantity,
	FieldDtype,
}

var (
	// CategoriesPrimaryKey and CategoriesColumn2 are the table columns denoting the
	// primary key for the categories relation (M2M).
	CategoriesPrimaryKey = []string{"category_id", "item_id"}
)

var (
	// DefaultCreatedAt holds the default value on creation for the created_at field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the updated_at field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	UpdateDefaultUpdatedAt func() time.Time
)

// Dtype defines the type for the dtype enum field.
type Dtype string

// Dtype values.
const (
	DtypeALBUM Dtype = "ALBUM"
	DtypeBOOK  Dtype = "BOOK"
	DtypeMOVIE Dtype = "MOVIE"
)

func (d Dtype) String() string {
	return string(d)
}

// DtypeValidator is a validator for the "dtype" field enum values. It is called by the builders before save.
func DtypeValidator(d Dtype) error {
	switch d {
	case DtypeALBUM, DtypeBOOK, DtypeMOVIE:
		return nil
	default:
		return fmt.Errorf("item: invalid enum value for dtype field: %q", d)
	}
}
